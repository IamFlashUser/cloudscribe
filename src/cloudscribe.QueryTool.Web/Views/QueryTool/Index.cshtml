@namespace cloudscribe.QueryTool.Web
@model QueryToolViewModel
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<QueryToolResources> sr

@{
    ViewData["Title"] = sr["Query Tool"];
}

<h2>@ViewData["Title"]</h2>

<form asp-action="Index">

    <div class="row">
        <div class="col-md-10">
            <div class="form-group">
                <label for="Table" class="form-label">@sr["Tables"]</label>
                <select id="Table" asp-for="Table" asp-items="@Model.TableNames" class="form-control" style="font-family: monospace;" onchange="this.form.submit();"></select>
            </div>
        </div>
        <div class="col-md-2 text-start">
            <div class="form-group">
                <label for="CreateActions1" class="form-label"></label>
                <div class="form-group" id="CreateActions1">
                    <button class="btn btn-primary btn-sm mt-2" id="Insert-Cursor1" type="submit" name="Command" value="insert">@sr["Insert at Cursor"]</button>
                </div>
            </div>
        </div>
    </div>
        <div class="row">
        <div class="col-md-10">
            <div class="form-group">
                <label for="Columns" class="form-label">@sr["Columns"]</label>
                <select id="Columns" asp-for="Columns" asp-items="@Model.ColumnNames" size=6 class="form-control" style="font-family: monospace;"></select>
            </div>
        </div>
        <div class="col-md-2 text-start">
            <label for="CreateActions2" class="form-label"></label>
            <div class="form-group" id="CreateActions2">
                <button class="btn btn-primary btn-sm mt-2" id="Insert-Cursor2" type="submit" name="Command" value="insert">@sr["Insert at Cursor"]</button>
                <br />
                <button class="btn btn-primary btn-sm mt-2" id="Create-Select" type="submit" name="Command" value="create_select">@sr["Select"]</button>
                <button class="btn btn-primary btn-sm mt-2" id="Create-Update" type="submit" name="Command" value="create_update">@sr["Update"]</button>
                <br />
                <button class="btn btn-primary btn-sm mt-2" id="Create-Insert" type="submit" name="Command" value="create_insert">@sr["Insert"]</button>
                <button class="btn btn-primary btn-sm mt-2" id="Create-Delete" type="submit" name="Command" value="create_delete">@sr["Delete"]</button>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-10">
            <div class="form-group">
                <label for="Query" class="form-label">@sr["Query"]</label>
                <textarea id="Query" name="Query" rows="5" cols="70" class="form-control" autocomplete="">@Model.Query</textarea>
            </div>
        </div>
        <div class="col-md-2 text-start">
            <label for="QueryActions" class="form-label"></label>
            <div class="form-group" id="QueryActions">
                <button class="btn btn-primary btn-sm mt-2" type="submit" name="Command" value="query">@sr["Execute Query"]</button>
                <button class="btn btn-primary btn-sm mt-2" type="submit" name="Command" value="clear">@sr["Clear Query"]</button>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-10"><a name="results"></a>
            @if (Model.RowsAffected.HasValue)
            {
            <div class="text-danger"><b>@String.Format(@sr["{0} rows affected"], @Model.RowsAffected.Value)</b></div>
            }
        </div>
        <div class="col-md-2 text-start">
            @if (Model.RowsAffected.HasValue)
            {
            <button class="btn btn-primary btn-sm mb-1" type="submit" name="Command" value="export">@sr["Export CSV"]</button>
            }
        </div>
        <input type="hidden" id="RowsAffected" value="@Model.RowsAffected" />
    </div>

    <div class="row">
        <div class="col-md-12">
            @if (Model.RowsAffected.HasValue)
            {
                <div class="table-responsive">
                    <data-table cs-data="@Model.Data"></data-table>
                </div>
            }
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            @if (!string.IsNullOrWhiteSpace(Model.ErrorMessage))
            {
                <div class="text-danger">@Model.ErrorMessage </div>
            }
        </div>
    </div>

    <div class="row">
        <div class="col-md-4 mt-1">
            @if(Model.hasQuery && Model.QueryIsValid)
            {
            <div class="form-group">
                <label for="SaveQuery" class="form-label">@sr["Save Query As"]:</label>
                <input id="SaveQuery" asp-for="SaveName" type="text"  value="@Model.SaveName" /><br />
                <label for="SaveQueryApi">@sr["Enable as API query?"] </label>
                <input id="SaveQueryApi" asp-for="SaveNameAsApi" type="checkbox" value="true" />
                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <button class="btn btn-primary btn-sm" type="submit" name="Command" value="save">@sr["Save Query"]</button>
            </div>
            }
            else
            {
                <input id="SaveQuery" asp-for="SaveName" type="hidden"  value="@Model.SaveName" />
                <input id="SaveQueryApi" asp-for="SaveNameAsApi" type="hidden"  value="@Model.SaveNameAsApi" />
            }
        </div>
        <div class="col-md-6 mt-1 text-end">
            @if (Model.SavedQueryNames != null && Model.SavedQueryNames.Count() > 0)
            {
            <div class="form-group">
                <label for="LoadQuery" class="form-label">@sr["Load Query"]:</label>
                <select id="SaveQuery" asp-for="SavedQueryName" asp-items="@Model.SavedQueryNames" class="form-select-sm"></select>
            </div>
            }
        </div>
        <div class="col-md-2 mt-1 text-start">
            @if (Model.SavedQueryNames != null && Model.SavedQueryNames.Count() > 0)
            {
            <div class="form-group">
                <button class="btn btn-primary btn-sm" type="submit" name="Command" value="load">@sr["Load Query"]</button>
                <button class="btn btn-danger btn-sm" type="button" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal">@sr["Delete Query"]</button>
            </div>
            }
        </div>
    </div>


    <div class="modal fade" id="confirmDeleteModal" data-bs-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="confirmDeleteHeading">
        <div class="modal-dialog modal-dialog-centered modal-sm" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="confirmDeleteHeading">@sr["Confirm Delete"]</h4>
                    <button type="button" data-bs-dismiss="modal" class="btn-close" aria-label='@sr["Close"]'>X</button>
                </div>
                <div class="modal-body">
                    @sr["Are you sure you want to delete the selected query?"]
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">@sr["Cancel"]</button>
                    <button type="submit" name="Command" value="delete" class="btn btn-danger btn-ok">@sr["Delete Query"]</button>
                </div>
            </div>
        </div>
    </div>

</form>
@section Scripts {
    <script>
        $(document).ready(function() {
            $('#Insert-Cursor1').on('click', function () {
                var table = $('#Table').val();
                var cursor = $('#Query').prop('selectionStart');
                var query = $('#Query').val();
                var before = query.substring(0, cursor);
                var after = query.substring(cursor, query.length);
                $('#Query').val(before + table + after);
                return false;
            });
            $('#Insert-Cursor2').on('click', function () {
                var columns = $('#Columns').val();
                var cursor = $('#Query').prop('selectionStart');
                var query = $('#Query').val();
                var before = query.substring(0, cursor);
                var after = query.substring(cursor, query.length);
                $('#Query').val(before + columns.join(', ') + after);
                return false;
            });
            var hasResults=$('#RowsAffected').val() > 0;
            if(hasResults) {
                var r=$('a[name="results"]');
                $('html,body').animate({scrollTop: r.offset().top},'slow');
            }
        })
    </script>
}