function doCountdownPromise(e, n, t, o) { n = 1e3 * n || 1e4; var i = new Date, r = function (u, a) { var s = Number(e) - Number(new Date - Number(i)) / 1e3; if (t > 0 && s > t) { $("#sessionExpiryWarning").hide(), o = !1 } if (t > 0 && s <= t) { let t = $("#sessionExpiryWarning"); if (null != t && parseInt(s) >= 0 && $("#sessionExpiryWarningSeconds").text(parseInt(s)), !o) { var m = n; n = 1e3, t.show(), $("#sessionKeepAlive").off(), $("#sessionKeepAlive").click((() => { let o = $("#sessionExpiryWarning")[0].dataset.urlKeepAlive; o = o + "?t=" + Math.random(), pollForKeepAlive(getRemainingTimePromise, o, 5e3, 800).then((function (r) { Number(r) - Number(s) > 10 ? (e = r, i = new Date, n = m, t.hide()) : pollForKeepAlive(getRemainingTimePromise, o, 5e3, 800).then((function (o) { Number(o) - Number(s) > 10 && (e = o, i = new Date, n = m, t.hide()) })).catch((function () { })) })).catch((function () { })) })), hookupLogoutButton(), o = !0 } } s < -2 ? u() : setTimeout(r, n, u, a) }; return new Promise(r) } function getRemainingTimePromise(e) { return $.ajax({ url: e }) } function pollForKeepAlive(e, n, t, o) { var i = Number(new Date) + (t || 5e3), r = function (t, u) { var a = e(n); a ? t(a) : Number(new Date) < i ? setTimeout(r, o, t, u) : u(new Error("session checker timed out")) }; return new Promise(r) } function btnManualLogout(e) { var n = document.getElementById("logoutForm"); n && n.submit(), e.preventDefault() } function hookupLogoutButton() { var e = document.getElementById("btnSessionLogOut"); e && e.addEventListener("click", btnManualLogout, !1) } window.addEventListener("DOMContentLoaded", (() => { let e = $("#sessionExpiry")[0], n = e.dataset.urlTarget, t = Number(e.dataset.alertThreshold) || 60, o = Number(e.dataset.pollingInterval) || 5; var i = Number(e.dataset.secondsLeft) || Number(getRemainingTime(source)) || 0; i > 0 && doCountdownPromise(i, o, t, !1).then((function () { window.location.href = n })).catch((function () { })) }));